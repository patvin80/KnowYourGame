<style type="text/css">
    button
    {
        font-size:2em;
        font-weight:bold;
    }

    .button{
      background-color: #333399;
      background-repeat: no-repeat;
      height:50px;
      letter-spacing:2px;
      font-size:medium;
      color:White;
    }
    input[type="text"], 
	input[type="password"] {
	    border: 1px solid #ccc;
	    padding: 2px;
	    font-size: 2em;
	    color: #444;
	    width: 40px;
	    
	}
	.error{border-color:#F00;}
</style>
<div id="container" style="overflow:hidden;width:1000px">
  <div id="inner" style="overflow:hidden;width: 2000px">
     <div style="float:left;background-color:#F0F0F0;width:600px;">
     <table>
        <tr align="center">
            <td>
                <input type="button" value="SPIN" class="button" onclick="spin();" />
            </td>
        </tr>
        <tr>
            <td>
                <canvas id="canvas" width="500" height="500"></canvas>
            </td>        
        </tr>
     </table>
     </div>
     <div style="float:left;padding-left:20px;width:400px;">
		<% @players.each do |player| %>
	        <div id="<%= player.id %>">
	           <h3><%= player.name%></h3> 
	           <button id="<%= player.name%>Inc">+</button>
	           <input type="text" name="qty" value="0" id="<%= player.name%>Num"/>
	            <button id="<%= player.name%>Dec">-</button>
	        </div>
		<% end %>
     </div>
  </div>
</div>
<script type="text/javascript">

	var colors = ["#F35B20", "#FEF200", "#B8D430", "#F35B20", 
					"#FB9A00", "#FFCC00", "#FEF200",
	              "#F80120", "#B8D430", "#F35B20",
	             "#FB9A00", "#FFCC00"];

	var categories = new Array(); 
	var i = 0;
	while (i < 12)
	{
	<% @categories.each do |category| %>
		categories[i] = "<%= category.name%>";
		i++;
	<% end %>
	}
	var startAngle = 0;
	var arc = Math.PI / 6;
	var spinTimeout = null;
	
	var spinArcStart = 10;
	var spinTime = 0;
	var spinTimeTotal = 0;
	
	var ctx;
	   
	function drawRouletteWheel() {
	  var canvas = document.getElementById('canvas');
	  if (canvas.getContext) {
	    var outsideRadius = 200;
	    var textRadius = 160;
	    var insideRadius = 125;
	   
	    ctx = canvas.getContext("2d");
	    ctx.clearRect(0,0,500,500);
	   
	   
	    ctx.strokeStyle = "black";
	    ctx.lineWidth = 2;
	   
	    ctx.font = 'bold 12px Helvetica, Arial';
	   
	    for(var i = 0; i < 12; i++) {
	      var angle = startAngle + i * arc;
	      ctx.fillStyle = colors[i];
	     
	      ctx.beginPath();
	      ctx.arc(250, 250, outsideRadius, angle, angle + arc, false);
	      ctx.arc(250, 250, insideRadius, angle + arc, angle, true);
	      ctx.stroke();
	      ctx.fill();
	     
	      ctx.save();
	      ctx.shadowOffsetX = -1;
	      ctx.shadowOffsetY = -1;
	      ctx.shadowBlur    = 0;
	      ctx.shadowColor   = "rgb(220,220,220)";
	      ctx.fillStyle = "black";
	      ctx.translate(250 + Math.cos(angle + arc / 2) * textRadius,
	                    250 + Math.sin(angle + arc / 2) * textRadius);
	      ctx.rotate(angle + arc / 2 + Math.PI / 2);
	      var text = categories[i];
	      ctx.fillText(text, -ctx.measureText(text).width / 2, 0);
	      ctx.restore();
	    }
	   
	    //Arrow
	    ctx.fillStyle = "black";
	    ctx.beginPath();
	    ctx.moveTo(250 - 4, 250 - (outsideRadius + 5));
	    ctx.lineTo(250 + 4, 250 - (outsideRadius + 5));
	    ctx.lineTo(250 + 4, 250 - (outsideRadius - 5));
	    ctx.lineTo(250 + 9, 250 - (outsideRadius - 5));
	    ctx.lineTo(250 + 0, 250 - (outsideRadius - 13));
	    ctx.lineTo(250 - 9, 250 - (outsideRadius - 5));
	    ctx.lineTo(250 - 4, 250 - (outsideRadius - 5));
	    ctx.lineTo(250 - 4, 250 - (outsideRadius + 5));
	    ctx.fill();
	  }
	}
	   
	function spin() {
	  spinAngleStart = Math.random() * 10 + 10;
	  spinTime = 0;
	  spinTimeTotal = Math.random() * 3 + 4 * 1000;
	  rotateWheel();
	}
	
	function rotateWheel() {
	  spinTime += 30;
	  if(spinTime >= spinTimeTotal) {
	    stopRotateWheel();
	    return;
	  }
	  var spinAngle = spinAngleStart - easeOut(spinTime, 0, spinAngleStart, spinTimeTotal);
	  startAngle += (spinAngle * Math.PI / 180);
	  drawRouletteWheel();
	  spinTimeout = setTimeout('rotateWheel()', 30);
	}
	
	function stopRotateWheel() {
	  clearTimeout(spinTimeout);
	  var degrees = startAngle * 180 / Math.PI + 90;
	  var arcd = arc * 180 / Math.PI;
	  var index = Math.floor((360 - degrees % 360) / arcd);
	  ctx.save();
	  ctx.font = 'bold 30px Helvetica, Arial';
	  var text = categories[index]
	  ctx.fillText(text, 250 - ctx.measureText(text).width / 2, 250 + 10);
	  ctx.restore();
	}
	
	function easeOut(t, b, c, d) {
	  var ts = (t/=d)*t;
	  var tc = ts*t;
	  return b+c*(tc + -3*ts + 3*t);
	}

drawRouletteWheel();

</script>
<script type="text/javascript">
   (function($){
 
       $.fn.extend({
           incrementBox: function(options) {
 
               var defaults = {
                   minVal:null,
                   maxVal:null,
                   incButton:'#inc',
                   decButton:'#dec'
               }
 
               var getNumVal = function($element){//get numeric value of an object
                                 var value = Number($element.val());
                                 return isNaN(value) ? 0 : value;
                               }
               var correctValue = function(min, max, value){
                 var checkMin = min!=null && !isNaN(0+min);
                 var checkMax = max!=null && !isNaN(0+max);
                 if(value>max && checkMax){
                   return max;
                 }
                 if(value<min && checkMin){
                   return min;
                 }
                 return value;
               }
 
               var options =  $.extend(defaults, options);
 
               return this.each(function() {
                   var o = options;
                   var $obj = $(this);
                     $(o.incButton).click(function(){                      
                       $obj.val( correctValue(o.minVal, o.maxVal, (getNumVal($obj) + 5)) );
                     });
                     $(o.decButton).click(function(){                              
                       $obj.val( correctValue(o.minVal, o.maxVal, (getNumVal($obj) - 5)) );
                     });
                     $obj.blur(function(){
                       $obj.val( correctValue(o.minVal, o.maxVal, getNumVal($obj)) );
                     });                  
               });
           }
       });
 
   })(jQuery);

	$(function () {
  		<% @players.each do |player| %>
      		$('#<%= player.name%>Num').incrementBox({ minVal: 0, maxVal: 30, incButton: "#<%= player.name%>Inc", decButton: "#<%= player.name%>Dec" });
      		$('#<%= player.name%>Num').click(function() {$('#<%= player.name%>Num').css('border-color', 'red');
 });
 			$('#<%= player.name%>Num').blur(function() {$('#<%= player.name%>Num').css('border-color', '#ccc');
 });
		<% end %>
   });

</script>